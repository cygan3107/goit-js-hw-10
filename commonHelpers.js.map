{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n// Opisany w dokumentacji\nimport iziToast from 'izitoast';\n// Kolejny import styl√≥w\nimport 'izitoast/dist/css/iziToast.min.css';\niziToast.show({\n  title: 'Hey',\n  message: 'What would you like to add?',\n});\n\n\nconst startBtn = document.querySelector('button[data-start]');\nconst inputDate = document.querySelector('#datetime-picker');\nconst timerValue = {\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nstartBtn.disabled = true;\nlet dateNow = Date.now();\nlet timeLeft = 0;\nlet selectedDate = 0;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (Date.parse(selectedDates[0]) < dateNow) {\n      Notify.failure('Please choose a date in the future');\n      startBtn.disabled = true;\n    } else {\n      selectedDate = Date.parse(selectedDates[0]);\n      startBtn.disabled = false;\n    }\n  },\n};\n\nconst fp = flatpickr(inputDate, options);\n\nstartBtn.addEventListener('click', onStartBtnClick);\n\nfunction onStartBtnClick() {\n  const interval = setInterval(() => {\n    dateNow = Date.now();\n    timeLeft = selectedDate - dateNow;\n    if (timeLeft > 0) {\n      const convertTimeLeft = convertMs(timeLeft);\n      timerValue.days.textContent = convertTimeLeft.days;\n      timerValue.hours.textContent = convertTimeLeft.hours;\n      timerValue.minutes.textContent = convertTimeLeft.minutes;\n      timerValue.seconds.textContent = convertTimeLeft.seconds;\n    } else {\n      clearInterval(interval);\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["iziToast","startBtn","inputDate","timerValue","dateNow","timeLeft","selectedDate","options","selectedDates","flatpickr","onStartBtnClick","interval","convertTimeLeft","convertMs","ms","days","addLeadingZero","hours","minutes","seconds","value"],"mappings":"0IAMAA,EAAS,KAAK,CACZ,MAAO,MACP,QAAS,6BACX,CAAC,EAGD,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAa,CACjB,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEAF,EAAS,SAAW,GACpB,IAAIG,EAAU,KAAK,MACfC,EAAW,EACXC,EAAe,EAEnB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjB,KAAK,MAAMA,EAAc,CAAC,CAAC,EAAIJ,GACjC,OAAO,QAAQ,oCAAoC,EACnDH,EAAS,SAAW,KAEpBK,EAAe,KAAK,MAAME,EAAc,CAAC,CAAC,EAC1CP,EAAS,SAAW,GAEvB,CACH,EAEWQ,EAAUP,EAAWK,CAAO,EAEvCN,EAAS,iBAAiB,QAASS,CAAe,EAElD,SAASA,GAAkB,CACzB,MAAMC,EAAW,YAAY,IAAM,CAGjC,GAFAP,EAAU,KAAK,MACfC,EAAWC,EAAeF,EACtBC,EAAW,EAAG,CAChB,MAAMO,EAAkBC,EAAUR,CAAQ,EAC1CF,EAAW,KAAK,YAAcS,EAAgB,KAC9CT,EAAW,MAAM,YAAcS,EAAgB,MAC/CT,EAAW,QAAQ,YAAcS,EAAgB,QACjDT,EAAW,QAAQ,YAAcS,EAAgB,OACvD,MACM,cAAcD,CAAQ,CAEzB,EAAE,GAAI,CACT,CAEA,SAASE,EAAUC,EAAI,CAQrB,MAAMC,EAAOC,EAAe,KAAK,MAAMF,EAAK,KAAG,CAAC,EAE1CG,EAAQD,EAAe,KAAK,MAAOF,EAAK,MAAO,IAAI,CAAC,EAEpDI,EAAUF,EAAe,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEjEK,EAAUH,EACd,KAAK,MAASF,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAC,EAAM,MAAAE,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASH,EAAeI,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}